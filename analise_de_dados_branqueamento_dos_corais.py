# -*- coding: utf-8 -*-
"""analise_de_dados_branqueamento_dos_corais.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17HluzDyTK52jXyXiOqKd_S0pMJpfGvlf
"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import geopandas as gpd
from matplotlib import pyplot as plt
import folium
from folium.plugins import HeatMap
from io import BytesIO

try:
    df = pd.read_csv('global_bleaching_environmental.csv', sep=';')
except FileNotFoundError:
    st.error("Erro: O arquivo 'global_bleaching_environmental.csv' não foi encontrado.")
    st.stop()

# Streamlit app
st.title("Análise de Branqueamento de Corais")

# Exibe o dataframe (opcional, ja que é grande que só)
if st.checkbox("Mostrar DataFrame"):
    st.write(df)

# Grafico de barras de contagem x Ocean_Name
st.subheader("Contagem de Branqueamentos por Oceano")
fig, ax = plt.subplots()
df.groupby('Ocean_Name').size().plot(kind='barh', color=sns.palettes.mpl_palette('Dark2'), ax=ax)
ax.spines[['top', 'right']].set_visible(False)
st.pyplot(fig)

# Histograma sobre Cyclone_Frequency
st.subheader("Histograma da Frequência de Ciclones")
fig, ax = plt.subplots(figsize=(10, 6))
df['Cyclone_Frequency'].plot(kind='hist', bins=20, title='Cyclone_Frequency', ax=ax)
ax.spines[['top', 'right']].set_visible(False)
plt.xticks(rotation=45, ha='right')
st.pyplot(fig)

# Gráfico de dispersão de Cyclone_Frequency x Percent_Bleaching
st.subheader("Frequência de Ciclones vs. Percentual de Branqueamento")
fig, ax = plt.subplots(figsize=(10, 6))
sns.scatterplot(data=df, x='Cyclone_Frequency', y='Percent_Bleaching', alpha=0.5, ax=ax)
ax.tick_params(axis='x', labelsize=8)
ax.tick_params(axis='y', labelsize=8)
plt.xticks(rotation=45, ha='right')
plt.title('Frequência de Ciclones vs. Branqueamento')
plt.xlabel('Frequência de Ciclones')
plt.ylabel('Percentual de Branqueamento')
st.pyplot(fig)

# Gráfico de barras de Turbidity x Percent_Bleaching
st.subheader("Turbidez vs. Percentual de Branqueamento")
fig, ax = plt.subplots(figsize=(10, 6))
sns.barplot(data=df, x='Turbidity', y='Percent_Bleaching', ci=None, dodge=False, ax=ax)
ax.tick_params(axis='x', labelsize=8)
ax.tick_params(axis='y', labelsize=8)
plt.xticks(rotation=45, ha='right')
plt.title('Turbidez vs. Branqueamento')
plt.xlabel('Turbidez')
plt.ylabel('Percentual de Branqueamento')
st.pyplot(fig)

# Box plot de Percent_Bleaching x Distance_to_Shore
st.subheader("Distribuição da Distância até a Costa")
fig, ax = plt.subplots(figsize=(10, 6))
sns.boxplot(data=df, x='Percent_Bleaching', y='Distance_to_Shore', ax=ax)
ax.tick_params(axis='x', labelsize=8)
ax.tick_params(axis='y', labelsize=8)
plt.xticks(rotation=45, ha='right')
plt.title('Distribuição da Distância até a Costa')
plt.xlabel('Percentual de Branqueamento')
plt.ylabel('Distância até a Costa')
st.pyplot(fig)

# Mapa
st.subheader("Mapa de Calor do Branqueamento")

df['Latitude_Degrees'] = pd.to_numeric(df['Latitude_Degrees'], errors='coerce')
df['Longitude_Degrees'] = pd.to_numeric(df['Longitude_Degrees'], errors='coerce')
df['Percent_Bleaching'] = pd.to_numeric(df['Percent_Bleaching'], errors='coerce')
df['Percent_Bleaching'].fillna(0, inplace=True)

m = folium.Map(location=[df['Latitude_Degrees'].mean(), df['Longitude_Degrees'].mean()], zoom_start=4)
heat_data = list(zip(df['Latitude_Degrees'], df['Longitude_Degrees'], df['Percent_Bleaching']))
HeatMap(heat_data).add_to(m)

# Exibe o mapa no Streamlit
st_data = BytesIO()
m.save(st_data, close_file=False)
st.components.v1.html(st_data.getvalue().decode(), height=600)